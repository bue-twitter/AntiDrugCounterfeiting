/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainJFrame.java
 *
 * Created on Oct 19, 2012, 7:13:16 PM
 */
package UserInterface;

import Business.Business;
import Business.Enterprise;
import Business.Network;
import Business.Patient;
import Business.UserAccount;
import UserInterface.Patient.PatientMainScreenJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author prakashj
 */
public class MainJFrame extends javax.swing.JFrame {

    private Business business;
    private Network network;

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();

        setExtendedState(MAXIMIZED_BOTH);

        business = db4o.Db4outil.getBusiness();
        business.setAllStatic();
        mainJSplitPane.setLeftComponent(new SelectNetworkJPanel(this));
    }

    public void enterNetwork(Network selectedNetwork) {
        this.network = selectedNetwork;
        
        business.setAllStatic();
        userProcessContainer.removeAll();
        mainJSplitPane.setLeftComponent(new LoginJPanel(this, network));
    }

    public void loginUser(String username, String password, Enterprise enterprise, Network selectedNetwork) {

        UserAccount ua = enterprise.authenticateUser(username, password);
        if (ua != null) {

            //
            mainJSplitPane.setLeftComponent(new LogoutJPanel(this));

            userProcessContainer.removeAll();
            JPanel panel = ua.getRole().getWorkArea().createView(userProcessContainer, selectedNetwork, enterprise, ua);
            userProcessContainer.add("WorkArea", panel);
            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
            cardLayout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(this, "Invalid username or password");
        }
    }

    public void patientLogin(String name, String id) {
        // check if existing patient
            if (network.getPatientDirectory().getPatientList().size() <= 0) {
                Patient newPatient = network.getPatientDirectory().newPatient();
                newPatient.setName(name);

                PatientMainScreenJPanel pmsjp = new PatientMainScreenJPanel(userProcessContainer, network, newPatient);
                userProcessContainer.add("Patient Main Screen", pmsjp);
                CardLayout card = (CardLayout) userProcessContainer.getLayout();
                card.next(userProcessContainer);

                mainJSplitPane.setLeftComponent(new LogoutJPanel(this));
            } else {
                for (Patient p : network.getPatientDirectory().getPatientList()) {
                    if (p.getName().equalsIgnoreCase(name) && String.valueOf(p.getId()).equals(id)) {
                        PatientMainScreenJPanel pmsjp = new PatientMainScreenJPanel(userProcessContainer, network, p);
                        userProcessContainer.add("Patient Main Screen", pmsjp);
                        CardLayout card = (CardLayout) userProcessContainer.getLayout();
                        card.next(userProcessContainer);

                        mainJSplitPane.setLeftComponent(new LogoutJPanel(this));
                    } else {
                        Patient newPatient = network.getPatientDirectory().newPatient();
                        newPatient.setName(name);

                        PatientMainScreenJPanel pmsjp = new PatientMainScreenJPanel(userProcessContainer, network, newPatient);
                        userProcessContainer.add("Patient Main Screen", pmsjp);
                        CardLayout card = (CardLayout) userProcessContainer.getLayout();
                        card.next(userProcessContainer);

                        mainJSplitPane.setLeftComponent(new LogoutJPanel(this));
                    }
                }
            
        }
    }

    public void logoutUser() {
        
        // do any cleanup here
        userProcessContainer.removeAll();
        // set login jpanel
        business.getAllStatic();
        db4o.Db4outil.storeObject(business);
        mainJSplitPane.setLeftComponent(new LoginJPanel(this, network));
    }

    public void logoutNetwork() {
        userProcessContainer.removeAll();
        business.getAllStatic();
        db4o.Db4outil.storeObject(business);
        mainJSplitPane.setLeftComponent(new SelectNetworkJPanel(this));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainJSplitPane = new javax.swing.JSplitPane();
        userProcessContainer = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainJSplitPane.setBackground(new java.awt.Color(255, 255, 255));
        mainJSplitPane.setDividerLocation(180);

        userProcessContainer.setBackground(new java.awt.Color(255, 255, 255));
        userProcessContainer.setLayout(new java.awt.CardLayout());
        mainJSplitPane.setRightComponent(userProcessContainer);

        getContentPane().add(mainJSplitPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane mainJSplitPane;
    private javax.swing.JPanel userProcessContainer;
    // End of variables declaration//GEN-END:variables
}
