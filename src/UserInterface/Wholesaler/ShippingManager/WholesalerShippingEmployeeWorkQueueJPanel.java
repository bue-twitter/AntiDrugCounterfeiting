/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Wholesaler.ShippingManager;

import Business.Dispenser.DispenserEnterprise;
import Business.Dispenser.DispenserInventoryItem;
import Business.Dispenser.DispenserInventoryManagementOrganization;
import Business.Enterprise;
import Business.Manufacturer.Drug;
import Business.Network;
import Business.OrderItem;
import Business.Organization;
import Business.UserAccount;
import Business.Wholesaler.WholesalerEnterprise;
import Business.Wholesaler.WholesalerInventoryItem;
import Business.Wholesaler.WholesalerShipWorkRequest;
import Business.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author karanmankodi
 */
public class WholesalerShippingEmployeeWorkQueueJPanel extends javax.swing.JPanel {

    private JPanel upcJPanel;
    private WholesalerEnterprise wholeEnt;
    private UserAccount ua;
    Network network;
    /**
     * Creates new form WholesalerShippingEmployeeWorkQueueJPanel
     */
    public WholesalerShippingEmployeeWorkQueueJPanel(JPanel upcJPanel, Network network, Enterprise ent, UserAccount ua) {
        initComponents();
        this.ua = ua;
        this.upcJPanel = upcJPanel;
        this.wholeEnt = (WholesalerEnterprise) ent;
        this.network = network;
        refreshWorkRequestTable();
    }

    private void refreshWorkRequestTable() {
        int rowCount = tblWorkQueue.getRowCount();

        for (int i = rowCount - 1; i >= 0; i--) {
            ((DefaultTableModel) tblWorkQueue.getModel()).removeRow(i);
        }


        Organization org = wholeEnt.getMyOrganization(ua);

        for (WorkRequest request : org.getWorkQueue().getWorkRequestList()) {
            if (request.getStatus().equals(WorkRequest.Status.Shipped)) {
                break;
            } else {
                Object row[] = new Object[5];

                row[0] = request;
                row[1] = request.getSender();
                row[2] = request.getReceiver();
                row[3] = request.getStatus();
                row[4] = request.getDrug();

                ((DefaultTableModel) tblWorkQueue.getModel()).addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnWorkOnIt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkQueue = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        btnWorkOnIt.setText("Work On It");
        btnWorkOnIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWorkOnItActionPerformed(evt);
            }
        });

        tblWorkQueue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Request ID", "Sender", "Receiver", "Status", "Drug"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblWorkQueue.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblWorkQueue);

        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("--- PENDING REQUESTS ---");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(backJButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(btnWorkOnIt))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1))
                .addContainerGap())
            .add(layout.createSequentialGroup()
                .add(142, 142, 142)
                .add(jLabel1)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(17, 17, 17)
                .add(jLabel1)
                .add(18, 18, 18)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(backJButton)
                    .add(btnWorkOnIt))
                .add(9, 9, 9))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnWorkOnItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWorkOnItActionPerformed
        // TODO add your handling code here:

        int row = tblWorkQueue.getSelectedRow();

        if (row < 0) {
            return;

        }

        WholesalerShipWorkRequest request = (WholesalerShipWorkRequest) tblWorkQueue.getValueAt(row, 0);

        request.setReceiver(ua);
        request.setStatus(WorkRequest.Status.Shipped);
        refreshWorkRequestTable();

        if (request.getReceiver() == ua) {
            for (Network n : Business.Business.getInstance().getNetworkDritectory().getNetworkList()){
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                if (e instanceof DispenserEnterprise) {
                    if (e.equals(request.getDrug().getDispEnt())) {
                        //System.out.println(e);
                        ArrayList<Organization> organizationList = e.getOrganizationDirectory().getOrganizationList();

                        for (Organization o : organizationList) {
                            if (o instanceof DispenserInventoryManagementOrganization) {
                                DispenserInventoryManagementOrganization dimo = (DispenserInventoryManagementOrganization) o;
                                OrderItem oi = request.getOrderItem();
                                Drug d = request.getDrug();
                                d.setDispEnt(request.getDrug().getDispEnt());

                                ArrayList<DispenserEnterprise> dispEntList;
                                dispEntList = n.getEnterpriseDirectory().searchDispEnterprise();
                                for (DispenserEnterprise dispEnt : dispEntList) {

                                    if (dispEnt.equals(request.getDrug().getDispEnt())) {



                                        int flag = 0;

                                        for (DispenserInventoryItem dii : dispEnt.getInvMgmtOrg().getInventory().getStoreInventory()) {
                                            if (dii.getDrug().getId().equals(d.getId())) {
                                                dii.setQuantity(dii.getQuantity() + request.getOrderItem().getQuantity());
                                                flag = 1;
                                            }
                                        }

                                        if (flag == 0) {
                                            DispenserInventoryItem newInventoryItem = dispEnt.getInvMgmtOrg().getInventory().newInventoryItem();
                                            newInventoryItem.setQuantity(request.getOrderItem().getQuantity());
                                            newInventoryItem.setDrug(d);
                                        }
                                        d.addToPedigree(ua);
                                        d.addToRequestIDs(request.getId());
                                        request.addIDtoList(request.getId());
                                        
                                        for (WholesalerInventoryItem wii : wholeEnt.getInvMgmtOrg().getInventory().getStoreInventory()){
                                            if (wii.getDrug().getId().equals(d.getId())){
                                                wii.setQuantity(wii.getQuantity() - request.getOrderItem().getQuantity());
                                            }
                                        }
                                        wholeEnt.getMyOrganization(ua).getWorkQueue().removeRequest(request);
                                        JOptionPane.showMessageDialog(null, "Item added to Inventory!");

                                    }


                                }
                            }
                        }
                    }
                }
            }
        }
        }
    }//GEN-LAST:event_btnWorkOnItActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        upcJPanel.remove(this);
        CardLayout cardLayout = (CardLayout) upcJPanel.getLayout();
        cardLayout.previous(upcJPanel);
    }//GEN-LAST:event_backJButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnWorkOnIt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblWorkQueue;
    // End of variables declaration//GEN-END:variables
}
