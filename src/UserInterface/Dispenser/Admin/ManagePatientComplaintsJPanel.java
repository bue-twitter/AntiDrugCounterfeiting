/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Dispenser.Admin;

import Business.Dispenser.AdverseEffectsWorkRequest;
import Business.Dispenser.DispenserEnterprise;
import Business.Network;
import Business.UserAccount;
import Business.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author karanmankodi
 */
public class ManagePatientComplaintsJPanel extends javax.swing.JPanel {
    private JPanel upcJPanel;
    private DispenserEnterprise dispEnt;
    private UserAccount ua;
    Network network;
    AdverseEffectsWorkRequest req;
    /**
     * Creates new form ManagePatientComplaintsJPanel
     */
    public ManagePatientComplaintsJPanel(JPanel upcJPanel, Network network, DispenserEnterprise dispEnt, UserAccount ua) {
        initComponents();
        this.upcJPanel = upcJPanel;
        this.dispEnt = dispEnt;
        this.ua = ua;
        this.network = network;
        Refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void Refresh(){
        int rowCount = complaintsJTable.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            ((DefaultTableModel) complaintsJTable.getModel()).removeRow(i);
        }

        ArrayList<WorkRequest> swList = dispEnt.getWorkQueue().getWorkRequestList();
        for (WorkRequest wr : swList) {
            if (wr instanceof AdverseEffectsWorkRequest) {
                req = (AdverseEffectsWorkRequest)wr;
                if ((wr.getStatus().equals(WorkRequest.Status.ReportSuspicion)) && wr.getStatus().equals(WorkRequest.Status.PrescriptionChanged)) {
                    break;
                } else {
                    Object row[] = new Object[3];
                    row [0] = wr;
                    row [1] = req.getPatient();
                    row [2] = wr.getDrug();
                    ((DefaultTableModel) complaintsJTable.getModel()).addRow(row);
                }
            }
        }
    
}
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        complaintsJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        complaintDetailsJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        complaintsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Complaint ID", "Patient", "Drug"
            }
        ));
        jScrollPane1.setViewportView(complaintsJTable);

        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        complaintDetailsJButton.setText("See Complaint");
        complaintDetailsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complaintDetailsJButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("--- PATIENT COMPLAINTS ---");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1)
            .add(layout.createSequentialGroup()
                .add(127, 127, 127)
                .add(jLabel1)
                .addContainerGap())
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(backJButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(complaintDetailsJButton))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(7, 7, 7)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                .add(102, 102, 102)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(backJButton)
                    .add(complaintDetailsJButton)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        upcJPanel.remove(this);
        CardLayout cardLayout = (CardLayout) upcJPanel.getLayout();
        cardLayout.previous(upcJPanel);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void complaintDetailsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_complaintDetailsJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = complaintsJTable.getSelectedRow();
        AdverseEffectsWorkRequest wr = (AdverseEffectsWorkRequest)complaintsJTable.getValueAt(selectedRow, 0);
        ComplaintDetailsJPanel cdjp = new ComplaintDetailsJPanel(upcJPanel, ua, wr, network);
        upcJPanel.add("Complaint Details", cdjp);
        CardLayout card = (CardLayout)upcJPanel.getLayout();
        card.next(upcJPanel);
    }//GEN-LAST:event_complaintDetailsJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton complaintDetailsJButton;
    private javax.swing.JTable complaintsJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
