/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Dispenser.InventoryManager;

import Business.Dispenser.DispenserEnterprise;
import Business.Enterprise;
import Business.Manufacturer.Drug;
import Business.Manufacturer.ManufacturerEnterprise;
import Business.Network;
import Business.Organization;
import Business.UserAccount;
import Business.Wholesaler.WholesalerEnterprise;
import Business.Wholesaler.WholesalerSalesOrganization;
import Business.Wholesaler.WholesalerSalesWorkRequest;
import Business.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author karanmankodi
 */
public class DispenserOrderDrugsJPanel extends javax.swing.JPanel {

    private DispenserEnterprise dispEnt;
    private JPanel upcJPanel;
    private UserAccount ua;
    Network network;
    private Drug searchDrug;
    ArrayList<WholesalerEnterprise> wholeEntList;
    ArrayList<ManufacturerEnterprise> manuEntList;

    /**
     * Creates new form DispenserOrderDrugsJPanel
     */
    public DispenserOrderDrugsJPanel(JPanel upcJPanel, Network network, Enterprise ent, UserAccount ua) {
        initComponents();

        this.dispEnt = (DispenserEnterprise) ent;
        this.upcJPanel = upcJPanel;
        this.ua = ua;
        this.network = network;
        wholeEntList = network.getEnterpriseDirectory().searchWholeEnterprise();
        for (Network n : Business.Business.getInstance().getNetworkDritectory().getNetworkList()) {
            manuEntList = n.getEnterpriseDirectory().searchManuEnterprise();
            for (ManufacturerEnterprise e : manuEntList) {
                if (e.getLicense().equals(Boolean.TRUE)) {
                    for (Drug d : e.getProdMgmtOrg().getDrugCatalog().getDrugList()) {
                        drugsJComboBox.addItem(d);
                    }
                }
            }
        }
        refreshWorkRequestTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        orderJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        quantityJTextField = new javax.swing.JTextField();
        quantityJLabel = new javax.swing.JLabel();
        drugJLabel = new javax.swing.JLabel();
        drugsJComboBox = new javax.swing.JComboBox();
        idJLabel = new javax.swing.JLabel();
        nameJLabel = new javax.swing.JLabel();
        manufacturerJLabel = new javax.swing.JLabel();
        priceJLabel = new javax.swing.JLabel();
        manufacturerJTextField = new javax.swing.JTextField();
        idJTextField = new javax.swing.JTextField();
        priceJTextField = new javax.swing.JTextField();
        nameJTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        catalogJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        licenseNoJTextField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        orderJButton.setText("Order");
        orderJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderJButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("--- PLACE ORDER FOR A NEW DRUG ---");

        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        quantityJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityJTextFieldActionPerformed(evt);
            }
        });

        quantityJLabel.setText("Quantity");

        drugJLabel.setText("Select Drug");

        drugsJComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                drugsJComboBoxMouseClicked(evt);
            }
        });

        idJLabel.setText("ID");

        nameJLabel.setText("Name");

        manufacturerJLabel.setText("Manufacturer");

        priceJLabel.setText("Price");

        manufacturerJTextField.setEditable(false);

        idJTextField.setEditable(false);

        priceJTextField.setEditable(false);

        nameJTextField.setEditable(false);

        catalogJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Drug", "Drug ID", "Manufacturer"
            }
        ));
        catalogJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                catalogJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(catalogJTable);

        jLabel2.setText("License No");

        licenseNoJTextField.setEditable(false);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel1)
                .add(165, 165, 165))
            .add(layout.createSequentialGroup()
                .add(backJButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(orderJButton)
                .addContainerGap())
            .add(jScrollPane1)
            .add(layout.createSequentialGroup()
                .add(115, 115, 115)
                .add(drugJLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(drugsJComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 247, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(54, 54, 54)
                        .add(priceJLabel)
                        .add(10, 10, 10)
                        .add(priceJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(84, 84, 84)
                        .add(quantityJLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(quantityJTextField))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(nameJLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(nameJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 192, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 41, Short.MAX_VALUE)
                        .add(idJLabel)
                        .add(18, 18, 18)
                        .add(idJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 271, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                    .add(layout.createSequentialGroup()
                        .add(manufacturerJLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(manufacturerJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 145, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(licenseNoJTextField)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(6, 6, 6)
                .add(jLabel1)
                .add(8, 8, 8)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(drugsJComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(drugJLabel))
                .add(10, 10, 10)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(idJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(idJLabel)
                    .add(nameJLabel)
                    .add(nameJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(manufacturerJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(manufacturerJLabel)
                    .add(jLabel2)
                    .add(licenseNoJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(priceJLabel))
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(priceJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(quantityJLabel)
                        .add(quantityJTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(backJButton)
                    .add(orderJButton)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void orderJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderJButtonActionPerformed
        // TODO add your handling code here:
        if (searchDrug.getLicense().equals(Boolean.TRUE)) {

            for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (e instanceof WholesalerEnterprise) {
                    //System.out.println(e);

                    ArrayList<Organization> organizationList = e.getOrganizationDirectory().getOrganizationList();
                    for (Organization o : organizationList) {
                        if (o instanceof WholesalerSalesOrganization) {
                            WholesalerSalesWorkRequest request = (WholesalerSalesWorkRequest) o.getWorkQueue().newWorkRequest(WorkRequest.Type.WholesalerSalesWorkRequest);
                            request.setSender(ua);
                            request.setDrug(searchDrug);
                            request.setQuantity(Integer.parseInt(quantityJTextField.getText()));
                            request.setWholeEnt((WholesalerEnterprise) e);
                            request.setManuEnt(searchDrug.getManuEnt());
                            request.setDispEnt(dispEnt);
                            searchDrug.addToPedigree(ua);
                            searchDrug.addToRequestIDs(request.getId());
                            searchDrug.setDispEnt(dispEnt);
                            request.addIDtoList(request.getId());

                            //Adding request to sender's list
                            Organization org = dispEnt.getMyOrganization(ua);
                            org.getSentWorkQueue().addRequest(request);

                            JOptionPane.showMessageDialog(null, "Order placed for drug '" +request.getDrug()+ "'.");
                        }
                    }

                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Drug not licensed for trade");
        }

    }//GEN-LAST:event_orderJButtonActionPerformed

    private void refreshWorkRequestTable() {
        int rowCount = catalogJTable.getRowCount();

        for (int i = rowCount - 1; i >= 0; i--) {
            ((DefaultTableModel) catalogJTable.getModel()).removeRow(i);
        }

        for (Network n : Business.Business.getInstance().getNetworkDritectory().getNetworkList()) {
            manuEntList = n.getEnterpriseDirectory().searchManuEnterprise();
            for (ManufacturerEnterprise e : manuEntList) {
                if (e.getLicense().equals(Boolean.TRUE)) {
                    for (Drug d : e.getProdMgmtOrg().getDrugCatalog().getDrugList()) {

                        Object row[] = new Object[3];
                        row[0] = d;
                        row[1] = d.getId();
                        row[2] = d.getManuEnt();
                        ((DefaultTableModel) catalogJTable.getModel()).addRow(row);
                    }
                }
            }
        }
    }

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        upcJPanel.remove(this);
        CardLayout cardLayout = (CardLayout) upcJPanel.getLayout();
        cardLayout.previous(upcJPanel);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void quantityJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityJTextFieldActionPerformed

    private void drugsJComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drugsJComboBoxMouseClicked
        // TODO add your handling code here:
        searchDrug = (Drug) drugsJComboBox.getSelectedItem();
        idJTextField.setText(String.valueOf(searchDrug.getId()));
        nameJTextField.setText(String.valueOf(searchDrug.getName()));
        priceJTextField.setText(String.valueOf(searchDrug.getPrice()));
        licenseNoJTextField.setText(String.valueOf(searchDrug.getManuEnt().getId()));
        manufacturerJTextField.setText(String.valueOf(searchDrug.getManuEnt()));
        
    }//GEN-LAST:event_drugsJComboBoxMouseClicked

    private void catalogJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_catalogJTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = catalogJTable.getSelectedRow();
        searchDrug = (Drug) catalogJTable.getValueAt(selectedRow, 0);
        idJTextField.setText(String.valueOf(searchDrug.getId()));
        nameJTextField.setText(String.valueOf(searchDrug.getName()));
        priceJTextField.setText(String.valueOf(searchDrug.getPrice()));
        manufacturerJTextField.setText(String.valueOf(searchDrug.getManuEnt()));
        licenseNoJTextField.setText(String.valueOf(searchDrug.getManuEnt().getId()));
        
    }//GEN-LAST:event_catalogJTableMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTable catalogJTable;
    private javax.swing.JLabel drugJLabel;
    private javax.swing.JComboBox drugsJComboBox;
    private javax.swing.JLabel idJLabel;
    private javax.swing.JTextField idJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField licenseNoJTextField;
    private javax.swing.JLabel manufacturerJLabel;
    private javax.swing.JTextField manufacturerJTextField;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JButton orderJButton;
    private javax.swing.JLabel priceJLabel;
    private javax.swing.JTextField priceJTextField;
    private javax.swing.JLabel quantityJLabel;
    private javax.swing.JTextField quantityJTextField;
    // End of variables declaration//GEN-END:variables
}
