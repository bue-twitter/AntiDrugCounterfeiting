/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FDA.ForensicsOrganization;

import Business.FDA.FDAEnterprise;
import Business.FDA.ForensicsReport;
import Business.Network;
import Business.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author karanmankodi
 */
public class ForensicReportsDirectoryJPanel extends javax.swing.JPanel {

    private JPanel upcJPanel;
    private FDAEnterprise fdaEnt;
    private UserAccount ua;
    Network network;

    /**
     * Creates new form ForensicReportsDirectoryJPanel
     */
    public ForensicReportsDirectoryJPanel(JPanel upcJPanel, Network network, FDAEnterprise fdaEnt, UserAccount ua) {
        initComponents();
        this.upcJPanel = upcJPanel;
        this.fdaEnt = fdaEnt;
        this.ua = ua;
        this.network = network;
        Refresh();
        fdaRefresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    public void Refresh() {
        int rowCount = reportsJTable.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            ((DefaultTableModel) reportsJTable.getModel()).removeRow(i);
        }

        ArrayList<ForensicsReport> reportList = fdaEnt.getDir().getForensicReportList();
        for (ForensicsReport fr : reportList) {
            if (fr.getEnt().equals(fdaEnt)) {
                return;
            } else {

                Object row[] = new Object[3];
                row[0] = fr;
                row[1] = fr.getDrug().getName();
                row[2] = fr.getEnt();

                ((DefaultTableModel) reportsJTable.getModel()).addRow(row);

            }
        }
    }

    public void fdaRefresh() {
        int rowCount = fdaReportJTable.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            ((DefaultTableModel) fdaReportJTable.getModel()).removeRow(i);
        }

        ArrayList<ForensicsReport> fdaReportList = fdaEnt.getDir().getForensicReportList();
        for (ForensicsReport fdaFR : fdaReportList) {
            if (fdaFR.getEnt().equals(fdaEnt)) {
                Object row[] = new Object[3];
                row[0] = fdaFR;
                row[1] = fdaFR.getDrug().getName();
                row[2] = fdaFR.getEnt();

                ((DefaultTableModel) fdaReportJTable.getModel()).addRow(row);
            }
        }
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        reportsJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        fdaReportJTable = new javax.swing.JTable();
        investigateJButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        reportsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Case ID", "Drug", "Enterprise"
            }
        ));
        jScrollPane1.setViewportView(reportsJTable);

        jLabel1.setText("--- FORENSIC REPORTS ---");

        fdaReportJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Case ID", "Drug", "Enterprise"
            }
        ));
        jScrollPane2.setViewportView(fdaReportJTable);

        investigateJButton.setText("Investigate");
        investigateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                investigateJButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(112, 112, 112)
                        .add(jLabel1)
                        .add(0, 105, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jButton2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(investigateJButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .add(65, 65, 65)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(61, 61, 61)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(investigateJButton)
                    .add(jButton2))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void investigateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_investigateJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow1 = reportsJTable.getSelectedRow();
        int selectedRow2 = fdaReportJTable.getSelectedRow();

        ForensicsReport report = (ForensicsReport) reportsJTable.getValueAt(selectedRow1, 0);
        ForensicsReport fdaReport = (ForensicsReport) fdaReportJTable.getValueAt(selectedRow2, 0);

        if (report.getDrug().getId().equals(fdaReport.getDrug().getId())) {
            if (report.getActiveIngredient().equals(fdaReport.getActiveIngredient())) {

                if (report.getActiveIngProportion() == fdaReport.getActiveIngProportion()) {
                    if (report.getInactiveIngredient().equals(fdaReport.getInactiveIngredient())) {
                        if (report.getInactiveIngProportion() == fdaReport.getInactiveIngProportion()) {
                            if (report.getBasicContent() == fdaReport.getBasicContent()) {
                                if (report.getAcidicContent() == fdaReport.getAcidicContent()) {
                                    JOptionPane.showMessageDialog(null, "Enterprise '" +report.getEnt()+ "' found guilty and banned.");
                                    report.getEnt().setActive(Boolean.FALSE);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Charges cleared");
                                report.getEnt().setLicense(Boolean.TRUE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Charges cleared");
                            report.getEnt().setLicense(Boolean.TRUE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Charges cleared");
                        report.getEnt().setLicense(Boolean.TRUE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Charges cleared");
                    report.getEnt().setLicense(Boolean.TRUE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Charges cleared");
                report.getEnt().setLicense(Boolean.TRUE);
            }
        }
    }//GEN-LAST:event_investigateJButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        upcJPanel.remove(this);
        CardLayout card = (CardLayout)upcJPanel.getLayout();
        card.previous(upcJPanel);
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable fdaReportJTable;
    private javax.swing.JButton investigateJButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable reportsJTable;
    // End of variables declaration//GEN-END:variables
}
